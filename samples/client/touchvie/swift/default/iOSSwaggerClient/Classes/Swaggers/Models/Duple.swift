//
// Duple.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** List of related pairs of cards, each pair having a relationship type between both cards */
open class Duple: RelationModule {
    public enum TypeOfRelation: String { 
        case RAWSINGLE_ENUMSINGLE = "'{raw=single, enum=Single}'"
        case RAWDUPLE_ENUMDUPLE = "'{raw=duple, enum=Duple}'"
    }
    public enum ContentType: String { 
        case RAWCASTING_ENUMCASTING = "'{raw=casting, enum=Casting}'"
        case RAWFILMOGRAPHY_ENUMFILMOGRAPHY = "'{raw=filmography, enum=Filmography}'"
        case RAWPLAYED_BY_ENUMPLAYED_BY = "'{raw=played_by, enum=PlayedBy}'"
        case RAWWORN_BY_ENUMWORN_BY = "'{raw=worn_by, enum=WornBy}'"
        case RAWFEATURED_IN_ENUMFEATURED_IN = "'{raw=featured_in, enum=FeaturedIn}'"
    }
    /** Relation module type, defines the contained data structure */
    public var typeOfRelation: TypeOfRelation?
    /** Duple module content type, defines what kind of relations are contained in the module */
    public var contentType: ContentType?
    public var data: [DupleData]?

    

    // MARK: JSONEncodable
    override open func encodeToJSON() -> Any {
        var nillableDictionary = super.encodeToJSON() as? [String:Any?] ?? [String:Any?]()
        nillableDictionary["typeOfRelation"] = self.typeOfRelation?.rawValue
        nillableDictionary["content_type"] = self.contentType?.rawValue
        nillableDictionary["data"] = self.data?.encodeToJSON()
        let dictionary: [String:Any] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
