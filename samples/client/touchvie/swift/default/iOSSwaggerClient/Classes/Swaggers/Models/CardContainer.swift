//
// CardContainer.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** Card static data container. It&#39;s content depends on the &#39;type&#39; parameter value and is represented by the schema of the same name */
open class CardContainer: JSONEncodable {
    public enum TypeOfContainer: String { 
        case RAWTEXT_ENUMTEXT = "'{raw=text, enum=Text}'"
        case RAWLISTING_ENUMLISTING = "'{raw=listing, enum=Listing}'"
        case RAWRATING_ENUMRATING = "'{raw=rating, enum=Rating}'"
        case RAWMAP_ENUMMAP = "'{raw=map, enum=Map}'"
        case RAWLINK_ENUMLINK = "'{raw=link, enum=Link}'"
        case RAWAWARDS_ENUMAWARDS = "'{raw=awards, enum=Awards}'"
        case RAWCATALOG_ENUMCATALOG = "'{raw=catalog, enum=Catalog}'"
        case RAWSEASONS_ENUMSEASONS = "'{raw=seasons, enum=Seasons}'"
        case RAWIMAGE_ENUMIMAGE = "'{raw=image, enum=Image}'"
    }
    /** Card container format type, determines the format of the &#39;data&#39; field */
    public var typeOfContainer: TypeOfContainer?

    public init() {}

    // MARK: JSONEncodable
    open func encodeToJSON() -> Any {
        var nillableDictionary = [String:Any?]()
        nillableDictionary["typeOfContainer"] = self.typeOfContainer?.rawValue
        let dictionary: [String:Any] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
